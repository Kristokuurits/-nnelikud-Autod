{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Happy Cars API",
    "description": "API for car services and queue management"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/services": {
      "get": {
        "tags": ["Car Services"],
        "summary": "All happy cars",
        "description": "Returns all cars",
        "responses": {
          "200": {
            "description": "Returns all cars",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Car Services"],
        "summary": "Add a new car",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCar"
            }
          }
        ],
        "responses": {
          "201": { "description": "New car added" },
          "400": { "description": "Invalid data" }
        }
      }
    },
    "/services/{id}": {
      "get": {
        "tags": ["Car Services"],
        "summary": "Find car by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns car details",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "404": { "description": "Car not found" }
        }
      },
      "put": {
        "tags": ["Car Services"],
        "summary": "Update car data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCar"
            }
          }
        ],
        "responses": {
          "200": { "description": "Car updated" },
          "404": { "description": "Car not found" }
        }
      },
      "delete": {
        "tags": ["Car Services"],
        "summary": "Delete a car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Car deleted" },
          "404": { "description": "Car not found" }
        }
      }
    },
    "/queues": {
      "get": {
        "tags": ["Queue"],
        "summary": "All cars in the queue",
        "responses": {
          "200": {
            "description": "Returns all cars in the queue",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarQueue"
              }
            }
          }
        }
      }
    },
    "/queues/{id}": {
      "get": {
        "tags": ["Queue"],
        "summary": "Find car in queue by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns car details from the queue",
            "schema": {
              "$ref": "#/definitions/CarQueue"
            }
          },
          "404": { "description": "Car not in queue" }
        }
      },
      "post": {
        "tags": ["Queue"],
        "summary": "Add a car to the queue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Car added to the queue" },
          "400": { "description": "Car is already in the queue or invalid data" }
        }
      },
      "delete": {
        "tags": ["Queue"],
        "summary": "Remove car from the queue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Car removed from the queue" },
          "404": { "description": "Car not in queue" }
        }
      },
      "put": {
        "tags": ["Queue"],
        "summary": "Update car in the queue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarQueueUpdate"
            }
          }
        ],
        "responses": {
          "200": { "description": "Car in the queue updated" },
          "404": { "description": "Car not found in queue" }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": ["Clients"],
        "summary": "All clients",
        "description": "Returns all clients",
        "responses": {
          "200": {
            "description": "Returns all clients",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Client"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Clients"],
        "summary": "Add a new client",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewClient"
            }
          }
        ],
        "responses": {
          "201": { "description": "New client added" },
          "400": { "description": "Invalid data" }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": ["Clients"],
        "summary": "Find client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns client details",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "404": { "description": "Client not found" }
        }
      },
      "put": {
        "tags": ["Clients"],
        "summary": "Update client data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewClient"
            }
          }
        ],
        "responses": {
          "200": { "description": "Client updated" },
          "404": { "description": "Client not found" }
        }
      },
      "delete": {
        "tags": ["Clients"],
        "summary": "Delete a client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": { "description": "Client deleted" },
          "404": { "description": "Client not found" }
        }
      }
    }
  },
  "definitions": {
    "Car": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "price": { "type": "number" }
      }
    },
    "NewCar": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "price": { "type": "number" }
      },
      "required": ["name"]
    },
    "CarQueue": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "carName": { "type": "string" },
        "clientName": { "type": "string" },
        "queueStatus": { "type": "string" },
        "details": { "type": "string" },
        "serviceDuration": { "type": "string" },
        "clientnumber": { "type": "string" }
      }
    },
    "CarQueueUpdate": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "carName": { "type": "string" },
        "clientName": { "type": "string" },
        "queueStatus": { "type": "string" },
        "details": { "type": "string" },
        "serviceDuration": { "type": "string" }
      },
      "required": ["id"]
    },
    "Client": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "email": { "type": "string" },
        "phoneNumber": { "type": "string" }

      }
    },
    "NewClient": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "email": { "type": "string" },
        "phoneNumber": { "type": "string" }

      },
      "required": ["name", "email", "phoneNumber"]
    }
  }
}
